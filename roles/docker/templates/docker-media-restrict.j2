# AppArmor profile for docker-media-restrict restricted /data access
# Simple approach: allow system operations, restrict only /data
# 
# To use this profile:
# 1. Save as /etc/apparmor.d/docker-media
# 2. Load with: sudo apparmor_parser -r /etc/apparmor.d/docker-media
# 3. Apply to Docker containers with: --security-opt apparmor=docker-media

profile docker-media-restrict {
  # All capabilities
  capability,
  
  # All network access
  network,
  
  # Signal and process control
  signal,
  ptrace,
  
  # Allow all system directories (everything except /data)
  /bin/ r,
  /bin/** rwlix,
  /sbin/ r,
  /sbin/** rwlix,
  /usr/ r,
  /usr/** rwlix,
  /lib/ r,
  /lib/** rwlix,
  /lib64/ r,
  /lib64/** rwlix,
  /etc/ r,
  /etc/** rwl,
  /dev/ r,
  /dev/** rwl,
  /proc/ r,
  /proc/** rwl,
  /sys/ r,
  /sys/** rwl,
  /tmp/ r,
  /tmp/** rwl,
  /var/ r,
  /var/** rwl,
  /run/ r,
  /run/** rwl,
  /home/ r,
  /home/** rwl,
  /root/ r,
  /root/** rwl,
  /boot/ r,
  /boot/** rwl,
  /opt/ r,
  /opt/** rwl,
  /srv/ r,
  /srv/** rwl,
  /mnt/ r,
  /mnt/** rwl,
  /media/ r,
  /media/** rwl,
  
  # Memory mapping and root directory
  /** m,
  / r,
  
  # Additional top-level paths commonly used by containers
  /app/ r,
  /app/** rwl,
  /config/ r,
  /config/** rwl,
  /logs/ r,
  /logs/** rwl,
  /work/ r,
  /work/** rwl,
  /workspace/ r,
  /workspace/** rwl,
  
  # Init system support
  /init ix,
  /tini ix,
  /entrypoint.sh ix,
  /docker-entrypoint.sh ix,
  /usr/local/bin/entrypoint.sh ix,
  /usr/local/bin/docker-entrypoint.sh ix,
  /app/entrypoint.sh ix,
  /scripts/** ix,
  
  # Additional common container patterns
  /docker-entrypoint-initdb.d/** ix,
  
  # Docker socket access
  /var/run/docker.sock rw,
  /run/docker.sock rw,
  
  # /data directory listing only
  /data/ r,
  
  # Allow access ONLY to specified folders in /data
{% for share in shares %}
  /data/{{ share }}/ r,
  /data/{{ share }}/** rwl,
  /data/{{ share }}/** ix,
{% endfor %}
}