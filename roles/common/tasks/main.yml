---
- name: Update and Upgrade apt packages
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist
  tags:
    - packages
    - upgrade

- name: Install common packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop: "{{ common_packages }}"
  tags:
    - packages

- name: Install virtiofsd depending on Ubuntu version
  tags:
    - packages
  block:
    - name: Ensure universe repo is enabled
      ansible.builtin.apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_facts['distribution_release'] }} universe"
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Try installing virtiofsd directly
      ansible.builtin.apt:
        name: virtiofsd
        state: present
      register: virtiofsd_result
      failed_when: false

    - name: Fallback to qemu-system if virtiofsd is unavailable
      ansible.builtin.apt:
        name: qemu-system
        state: present
      when: virtiofsd_result is failed

- name: Restart SSH service
  ansible.builtin.service:
    name: ssh
    state: restarted
    enabled: true
  tags:
    - ssh

- name: Create mountpoint for UNRAID shares
  ansible.builtin.file:
    path: "/shares"
    state: directory
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: "0755"
  tags:
    - share

- name: Mount UNRAID shares
  ansible.posix.mount:
    path: "/shares"
    src: "{{ shares_mount_tag }}"
    fstype: virtiofs
    state: mounted
  become: true
  tags:
    - share

- name: Create {{ sabnzbd.sub_dir_name }} and {{ qbittorrent.sub_dir_name }} under Staging
  ansible.builtin.file:
    path: "/shares/{{ downloaders.staging.share_name }}/{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ sabnzbd.sub_dir_name }}"
    - "{{ qbittorrent.sub_dir_name }}"
  when: downloaders.staging.enabled
  tags:
    - share
