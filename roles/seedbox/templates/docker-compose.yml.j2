services:
{% if containers.pia_vpn %}
  vpn:
    image: thrnz/docker-wireguard-pia
    container_name: pia_vpn
    restart: unless-stopped
    volumes:
      - pia-dat:/pia
      - ./pia:/pia-port
    ports:
{% if containers.prowlarr %}
      # Prowlarr
      - {{ prowlarr.port }}:9696
{% endif %}
{% if containers.flaresolverr %}
      # FlareSolverr
      - {{ flaresolverr.port }}:8191
{% endif %}
{% if containers.bazarr %}
      # Bazarr
      - {{ bazarr.port }}:6767
{% endif %}
{% if containers.qbittorrent %}
      # qBittorrent
      - {{ qbittorrent.port }}:{{ qbittorrent.port }}
{% endif %}
{% if containers.sabnzbd %}
      # SABnzbd
      - {{ sabnzbd.port }}:8080
{% endif %}
{% if containers.radarr %}
      # Radarr
      - {{ radarr.port }}:7878
{% endif %}
{% if containers.sonarr %}
      # Sonarr
      - {{ sonarr.port }}:8989
{% endif %}
{% if containers.readarr_audiobooks or containers.readarr_ebooks %}
      # Readarr Audiobooks
      - {{ readarr_audiobooks.port }}:8787
{% endif %}
{% if containers.readarr_ebooks %}
      # Readarr Ebooks
      - {{ readarr_ebooks.port }}:8788
{% endif %}
{% if containers.lazylibrarian %}
      # Lazylibrarian
      - {{ lazylibrarian.port }}:5299
{% endif %}
{% if containers.bookbounty %}
      # Bookbounty
      - {{ bookbounty.port }}:5000
{% endif %}
{% if containers.firefox %}
      # Firefox
      - {{ firefox.port }}:3001
{% endif %}
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - LOCAL_NETWORK={{ pia_vpn.local_network }}
{% if pia_vpn.server_loc is defined %}
      - LOC={{ pia_vpn.server_loc }}
{% else %}
      - PIA_DIP_TOKEN={{ pia_vpn.dip_token }}
{% endif %}
      - USER={{ pia_vpn.username }}
      - PASS={{ pia_vpn.password }}
      - PORT_FORWARDING=1
      - PORT_FILE=/pia-port/port.dat
      - FIREWALL=1
{% if pia_vpn.port_fatal %}
      - PORT_FATAL=1
{% endif %}
{% if pia_vpn.port_persist %}
      - PORT_PERSIST=1
{% endif %}
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 300s
      timeout: 10s
      retries: 3
      start_period: 30s
      start_interval: 3s
{% endif %}
{% if containers.radarr %}
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
    volumes:
      - ./radarr/config:/config
      - /data:/data
{% if not containers.pia_vpn %}
    ports:
      - {{ radarr.port }}:7878
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7878 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.qbittorrent %}
      qbittorrent:
        condition: service_started
{% endif %}
{% if containers.sabnzbd %}
      sabnzbd:
        condition: service_started
{% endif %}
{% if containers.prowlarr %}
      prowlarr:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.sonarr %}
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
    volumes:
      - ./sonarr/config:/config
      - /data:/data
{% if not containers.pia_vpn %}
    ports:
      - {{ sonarr.port }}:8989
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8989 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.qbittorrent %}
      qbittorrent:
        condition: service_started
{% endif %}
{% if containers.sabnzbd %}
      sabnzbd:
        condition: service_started
{% endif %}
{% if containers.prowlarr %}
      prowlarr:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.recyclarr and (containers.sonarr or containers.radarr) %}
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:{{ recyclarr.version }}
    container_name: recyclarr
    restart: unless-stopped
    user: {{ PUID }}:{{ PGID }}
    volumes:
      - ./recyclarr/config:/config
    environment:
      - TZ={{ timezone }}
      - CRON_SCHEDULE={{ recyclarr.cron_schedule }}
      - RECYCLARR_CREATE_CONFIG=true
    depends_on:
{% if containers.sonarr %}
      sonarr:
        condition: service_healthy
{% endif %}
{% if containers.radarr %}
      radarr:
        condition: service_healthy
{% endif %}
{% endif %}
{% if containers.notifiarr %}
  notifiarr:
    image: golift/notifiarr:latest
    container_name: notifiarr
    hostname: notifiarr
    restart: unless-stopped
    ports:
      - {{ notifiarr.port }}:5454
    environment:
      - DN_API_KEY={{ notifiarr.api_key }}
    volumes:
      - ./notifiarr/config:/config
    depends_on:
{% if containers.sonarr %}
      sonarr:
        condition: service_started
{% endif %}
{% if containers.radarr %}
      radarr:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.prowlarr %}
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
    volumes:
      - ./prowlarr/config:/config
{% if not containers.pia_vpn %}
    ports:
      - {{ prowlarr.port }}:9696
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9696 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.qbittorrent %}
      qbittorrent:
        condition: service_started
{% endif %}
{% if containers.sabnzbd %}
      sabnzbd:
        condition: service_started
{% endif %}
{% if containers.flaresolverr %}
      flaresolverr:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.flaresolverr %}
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - LOG_LEVEL=info
{% if not containers.pia_vpn %}
    ports:
      - {{ flaresolverr.port }}:8191
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8191 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% endif %}
{% if containers.readarr_audiobooks %}
  readarr-audiobooks:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr-audiobooks
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
    volumes:
      - ./readarr-audiobooks/config:/config
      - /data:/data
{% if not containers.pia_vpn %}
    ports:
      - {{ readarr_audiobooks.port }}:8787
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8787 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.qbittorrent %}
      qbittorrent:
        condition: service_started
{% endif %}
{% if containers.sabnzbd %}
      sabnzbd:
        condition: service_started
{% endif %}
{% if containers.prowlarr %}
      prowlarr:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.readarr_ebooks %}
  readarr-ebooks:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr-ebooks
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
    volumes:
      - ./readarr-ebooks/config:/config
      - /data:/data
{% if not containers.pia_vpn %}
    ports:
      - {{ readarr_ebooks.port }}:8788      
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8787 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.qbittorrent %}
      qbittorrent:
        condition: service_started
{% endif %}
{% if containers.sabnzbd %}
      sabnzbd:
        condition: service_started
{% endif %}
{% if containers.prowlarr %}
      prowlarr:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.lazylibrarian %}
  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
{% if lazylibrarian.docker_mods %}
      - DOCKER_MODS={{ lazylibrarian.docker_mods }}
{% endif %}
    volumes:
      - ./lazylibrarian/config:/config
      - /data:/data
{% if not containers.pia_vpn %}
    ports:
      - {{ lazylibrarian.port }}:5299
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5299 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: 300s
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.qbittorrent %}
      qbittorrent:
        condition: service_started
{% endif %}
{% if containers.sabnzbd %}
      sabnzbd:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.readarr_ebooks and containers.bookbounty %}
  bookbounty:
    image: thewicklowwolf/bookbounty:latest
    container_name: bookbounty
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - readarr_address=http://{{ host_ip }}:{{ readarr_ebooks.port }}
      - sync_schedule={{ bookbounty.sync_schedule }}
      - selected_language={{ bookbounty.selected_language }}
      - preferred_extensions_fiction={{ bookbounty.preferred_ext_fiction }}
      - preferred_extensions_non_fiction={{ bookbounty.preferred_ext_non_fiction }}
      - selected_path_type={{ bookbounty.selected_path_type }}
{% if not containers.pia_vpn %}
    ports:
      - {{ bookbounty.port }}:5000
{% endif %}
    volumes:
      - ./bookbounty/config:/bookbounty/config
      - {{ bookbounty.download_path }}:/bookbounty/downloads
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "--no-check-certificate", "-q", "http://localhost:5000/"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
      readarr-ebooks:
        condition: service_started
{% endif %}
{% if containers.bazarr %}
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
    volumes:
      - ./bazarr/config:/config
      - /data:/data
{% if not containers.pia_vpn %}
    ports:
      - {{ bazarr.port }}:6767
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6767 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.sonarr %}
      sonarr:
        condition: service_started
{% endif %}
{% if containers.radarr %}
      radarr:
        condition: service_started
{% endif %}
{% endif %}
{% if containers.qbittorrent %}
  qbittorrent:
    image: qbittorrentofficial/qbittorrent-nox:latest
    container_name: qbittorrent
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - QBT_LEGAL_NOTICE=confirm
      - QBT_VERSION=latest
      - QBT_WEBUI_PORT={{ qbittorrent.port }}
      - TZ={{ timezone }}
    read_only: true
    stop_grace_period: 30m
    tmpfs:
      - /tmp
    tty: true
    volumes:
      - ./qbittorrent/config:/config
      - /data/downloads/Torrents:/data/downloads/Torrents
{% if not containers.pia_vpn %}
    ports:
      - {{ qbittorrent.port }}:{{ qbittorrent.port }}
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:{{ qbittorrent.port }} || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% if containers.pia_vpn %}
  qbittorrent-porthelper:
    image: strenkml/qbittorrent-porthelper
    container_name: qbittorrent-porthelper
    restart: unless-stopped
    environment:
      - QBITTORRENT_HOST={{ qbittorrent.host }}
      - QBITTORRENT_PORT={{ qbittorrent.port }}
      - QBITTORRENT_USERNAME={{ qbittorrent.username }}
      - QBITTORRENT_PASSWORD={{ qbittorrent.password }}
      - QBITTORRENT_UPDATE_TIME_SECONDS={{ qbittorrent_porthelper.update_time_seconds }}
      - PIA_PORT_FILE_NAME=port.dat
    volumes:
      - ./pia:/pia_port:ro
    depends_on:
      qbittorrent:
        condition: service_healthy
{% endif %}
{% if containers.qbittorrent_managetorrents %}
  qbittorrent-managetorrents:
    image: strenkml/qbittorrent-manage-torrents
    container_name: qbittorrent-managetorrents
    restart: unless-stopped
    environment:
      - QBITTORRENT_HOST={{ qbittorrent.host }}
      - QBITTORRENT_PORT={{ qbittorrent.port }}
      - QBITTORRENT_USERNAME={{ qbittorrent.username }}
      - QBITTORRENT_PASSWORD={{ qbittorrent.password }}
      - QBITTORRENT_UPDATE_TIME_SECONDS={{ qbittorrent_managetorrents.update_time_seconds }}
    depends_on:
      qbittorrent:
        condition: service_healthy
{% endif %}
{% endif %}
{% if containers.sabnzbd %}
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
    volumes:
      - ./sabnzbd/config:/config
      - /data/downloads/Usenet:/data/downloads/Usenet
{% if not containers.pia_vpn %}
    ports:
      - {{ sabnzbd.port }}:8080
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
    depends_on:
{% if containers.pia_vpn %}
      vpn:
        condition: service_healthy
{% endif %}
{% endif %}
{% if containers.firefox %}
  firefox:
    image: lscr.io/linuxserver/firefox:latest
    container_name: firefox
    restart: unless-stopped
{% if containers.pia_vpn %}
    network_mode: "service:vpn"
{% endif %}
    security_opt:
      - seccomp:unconfined
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
      - TZ={{ timezone }}
{% if not containers.pia_vpn %}
    ports:
      - {{ firefox.port }}:3001
{% endif %}
    volumes:
      - ./firefox/config:/config
    shm_size: {{ firefox.shm_size }}
    healthcheck:
      test: ["CMD-SHELL", "curl -fk https://localhost:3001 || exit 1"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
{% if containers.pia_vpn %}
    depends_on:
      vpn:
        condition: service_healthy
{% endif %}
{% endif %}
{% if containers.portainer %}
  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 8000:8000
      - {{ portainer.port }}:9443
    healthcheck:
      test: ["CMD", "wget", "--spider", "--no-check-certificate", "-q", "https://localhost:9443/api/status"]
      interval: {{ health_check.interval }}
      timeout: {{ health_check.timeout }}
      retries: {{ health_check.retries }}
      start_period: {{ health_check.start_period }}
{% endif %}
{% if containers.watchtower %}
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "{{ watchtower.cron_schedule }}"
{% endif %}
{% if containers.autoheal %}
  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
{% endif %}
{% if containers.syncthing %}
  syncthing:
    image: syncthing/syncthing:latest
    container_name: syncthing
    restart: unless-stopped
    ports:
      - {{ syncthing.gui_port }}:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    environment:
      - PUID={{ PUID }}
      - PGID={{ PGID }}
    volumes:
      - ./:/dockers
{% endif %}

{% if containers.portainer or containers.pia_vpn %}
volumes:
{% endif %}
{% if containers.portainer %}
  portainer_data:
{% endif %}
{% if containers.pia_vpn %}
  pia-dat:
{% endif %}
